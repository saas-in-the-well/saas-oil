name: Java CI with Gradle

on:
  push:
    branches: [ "dev/dev_anseongjin" ]
  pull_request:
    branches: [ "dev/dev_anseongjin" ]

permissions:
  id-token: write   # This is required for requesting the JWT

env:
  APP_NAME: saas-oil
  BRANCH_NAME: dev_anseongjin
#  ecr_url: 794187215716.dkr.ecr.ap-northeast-2.amazonaws.com/saas-oil
  role_arn: ${{secrets.AWS_OIDC_ROLE}}
  aws_region: ${{secrets.AWS_REGION}}
#  img_name_tag: 794187215716.dkr.ecr.ap-northeast-2.amazonaws.com/saas-oil:tag-${{ github.sha }}
  SAAS_KUBE_REPOSITORY: ${{ vars.SAAS_KUBE_REPOSITORY }}
  SAAS_GITHUB_TOKEN: ${{ secrets.SAAS_GITHUB_TOKEN }}
  SAAS_GITHUB_EMAIL: ${{ vars.SAAS_GITHUB_EMAIL }}
  SAAS_GITHUB_NAME: ${{ vars.SAAS_GITHUB_NAME }}
  AWS_ECR_URL: ${{ secrets.AWS_ECR_URL }}
  IMG_NAME_TAG: "${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: saas-oil-application-jar
          path: target/*.jar

      - name: List files in the working directory - 1
        run: ls target/

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: saas-oil-application-jar
          path: target/

      # OIDC 인증
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ env.role_arn }}
          role-session-name: ecrRoleSession
          aws-region: ${{ env.aws_region }}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Docker 이미지 빌드
      - name: Build Docker image
        run: docker build . -t ${{ env.IMG_NAME_TAG }}

      # 이미지를 ECR에 푸시
      - name: Push Docker image to AWS ECR
        run: docker push ${{ env.IMG_NAME_TAG }}

  update-deployment:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kubernetes manifest repository
        uses: actions/checkout@v2
        with:
          repository: ${{ env.SAAS_KUBE_REPOSITORY }}
          token: ${{ env.SAAS_GITHUB_TOKEN }}
          ref: dev_anseongjin

      - name: Update k8s oil file
        run: |
          sed -i 's|${{ env.APP_NAME }}:.*|${{ env.IMG_NAME_TAG }}|' kube/saas-oil-application.yaml
          git config user.name ${{ env.SAAS_GITHUB_EMAIL }}
          git config user.email ${{ env.SAAS_GITHUB_NAME }}
          git add kube/saas-oil-application.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push