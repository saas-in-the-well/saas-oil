name: saas-oil application deploy

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  id-token: write   # This is required for requesting the JWT

env:
  APP_NAME: saas-oil
  BRANCH_NAME: develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.APP_NAME}}-application-jar
          path: target/*.jar

      - name: List files in the working directory - 1
        run: ls target/

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{env.APP_NAME}}-application-jar
          path: target/

      # OIDC 인증
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{secrets.AWS_OIDC_ROLE}}
          role-session-name: ecrRoleSession
          aws-region: ${{secrets.AWS_REGION}}

      # ECR 로그인
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Docker 이미지 빌드 & ECR에 푸시
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}
          platforms: linux/amd64

  update-deployment:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Kubernetes manifest repository
        uses: actions/checkout@v2
        with:
          repository: ${{ vars.SAAS_KUBE_REPOSITORY }}
          token: ${{ secrets.SAAS_GITHUB_TOKEN }}
          ref: ${{ env.BRANCH_NAME }}

      - name: Update k8s oil file
        run: |
          sed -i 's|${{ secrets.AWS_ECR_URL }}/.*|${{ secrets.AWS_ECR_URL }}/${{ env.APP_NAME }}:${{ env.BRANCH_NAME }}-${{ github.sha }}|' kube/${{env.BRANCH_NAME}}/${{env.APP_NAME}}.yaml
          git config user.name ${{ vars.SAAS_GITHUB_EMAIL }}
          git config user.email ${{ vars.SAAS_GITHUB_NAME }}
          git add kube/${{env.BRANCH_NAME}}/${{env.APP_NAME}}.yaml
          git commit -m "Update image tag to ${{ github.sha }}"
          git push